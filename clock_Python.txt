#######################################################################################################################
# All libraries and modules used
#######################################################################################################################

from tkinter import *
import time


#######################################################################################################################
# Defining Commands
#######################################################################################################################


def live_clock():
    try:
        lc_frame = Tk()
        frame = Frame(lc_frame, height="255", bg="yellow")
        frame.pack(fill=X)
        bg_image = PhotoImage(file=r"D:\Projects\Python_Projects\Project_Files\Jarvis_Files\Icon_icon_Bg_Pics"
                                   r"\liveClock_BG.png")
        # Above paste location of pic you Wanna use as Background Pic

        bg_label = Label(frame, image=bg_image, height=250, width=650)
        bg_label.place(x=0, y=0)
        name_label = Label(frame, width=23, font=("bold", 35), bg="black", text="Jarvis_clock", fg="light blue")
        name_label.place(x=0, y=0)
        label1 = Label(frame, width=100, height=2, bg="white")
        label1.place(x=0, y=150)
        clock_label = Label(frame, width=10, font=("bold", 55), bg="grey")
        clock_label.place(x=93, y=125)

        def update_label():
            current_time = time.strftime('%H: %M: %S')
            clock_label.configure(text=current_time, fg="black")
            clock_label.after(80, update_label)

        update_label()
        lc_frame.geometry("620x250+450+0")
        lc_frame.resizable(False, False)
        lc_frame.title("CLOCK")
        lc_frame.iconbitmap("D:\\Projects\\Python_Projects\\Project_Files\\Jarvis_Files\\Icon_icon_Bg_Pics\\Clock.ico")
        # Above paste location of pic you Wanna use as Icon Pic (Pic should be in .ico format)

        lc_frame.mainloop()
    except Exception as live_clock_Error_1:
        print(live_clock_Error_1)
        pass


if __name__ == "__main__":
    live_clock()

